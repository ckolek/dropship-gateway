extend type Query {
    order(id: ID, orderNumber: String) : Order

    searchOrders(
        criteria: OrderCriteria!
        pageNumber: Int!,
        pageSize: Int!) : OrderConnection!
}

type Order {
    id: ID!
    orderNumber: String!
    customerOrderNumber: String
    warehouse: Warehouse!
    recipient: Recipient!
    items: [OrderItem!]!
    serviceLevel: ServiceLevel
    packages: [Package!]
    invoices: [Invoice!]
    status: OrderStatus
    cancelCode: OrderCancelCode
    cancelReason: String
    timeOrdered: DateTime!
    timeReleased: DateTime!
    timeAcknowledged: DateTime
    timeCancelled: DateTime
    timeCreated: DateTime!
    timeUpdated: DateTime!
}

enum OrderStatus {
    NEW,
    ACKNOWLEDGED,
    SHIPPED_PARTIAL,
    SHIPPED,
    INVOICED_PARTIAL,
    INVOICED,
    CANCELLED
}

type OrderConnection implements Connection {
    edges: [OrderEdge!]!
    pageInfo: PageInfo!
}

type OrderEdge implements Edge {
    cursor: ID!
    node: Order!
}

type OrderItem {
    id: ID!
    order: Order!
    lineNumber: Int!
    catalogEntry: CatalogEntry!
    quantity: Int!
    customization: String
    expectedShipDate: DateTime
    expectedDeliveryDate: DateTime
    status: OrderStatus!
    quantityAccepted: Int
    quantityRejected: Int
    rejectCode: OrderCancelCode
    rejectReason: String
    timeAcknowledged: DateTime
    quantityCancelled: Int
    cancelCode: OrderCancelCode
    cancelReason: String
    timeCancelled: DateTime!
    packageItems: [PackageItem!]
    timeCreated: DateTime!
    timeUpdated: DateTime!
}

type OrderCancelCode {
    id: ID!
    code: String!
    description: String!
    timeCreated: DateTime!
    timeUpdated: DateTime!
}

type Recipient {
    contact: Contact!
    address: Address!
}

input OrderCriteria {
    id: ID
    orderNumber: String
    customerOrderNumber: String
    warehouses: [WarehouseCriteria]
    recipients: [RecipientCriteria]
    items: [OrderItemCriteria]
    serviceLevels: [ServiceLevelCriteria]
    statuses: [OrderStatus]
    cancelCodes: [OrderCancelCodeCriteria]
    cancelReason: String
    timeOrdered: DateTimeCriteria
    timeReleased: DateTimeCriteria
    timeAcknowledged: DateTimeCriteria
    timeCancelled: DateTimeCriteria
    timeCreated: DateTimeCriteria
    timeUpdated: DateTimeCriteria
}

input OrderItemCriteria {
    id: ID
    lineNumber: IntCriteria
    catalogEntries: [CatalogEntryCriteria]
    quantity: IntCriteria
    customization: String
    expectedShipDate: DateTimeCriteria
    expectedDeliveryDate: DateTimeCriteria
    statuses: [OrderStatus]
    quantityAccepted: IntCriteria
    quantityRejected: IntCriteria
    rejectCodes: [OrderCancelCodeCriteria]
    rejectReason: String
    timeAcknowledged: DateTimeCriteria
    quantityCancelled: IntCriteria
    cancelCodes: [OrderCancelCodeCriteria]
    cancelReason: String
    timeCancelled: DateTimeCriteria
    timeCreated: DateTimeCriteria
    timeUpdated: DateTimeCriteria
}

input OrderCancelCodeCriteria {
    id: ID
    code: String
    description: String
    timeCreated: DateTimeCriteria
    timeUpdated: DateTimeCriteria
}

input RecipientCriteria {
    contact: ContactCriteria
    address: AddressCriteria
}